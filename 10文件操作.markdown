# 5.文件操作
通过文件可以将数据永久化

头文件< fstream >

文件类型两种：
1. 文本文件：以ASCII码形式存储在计算机
2. 二进制文件 文本的二进制形式存储在计算机中，用户一般不能直接读懂它们

操作文件的三大类
1. ofstream：写操作
2. ifstream：读操作
3. fstream：读写操作

# 5.1写文件
1. 包括头文件
   ```
   #include<fstream>
   ```
2. 创建流对象
   ```
   ofstream ofs;
   ```
3. 打开文件
   ```
   ofs.open(“文件路径”，打开方式);
   ```
4. 写数据
   ```
   ofs<<" ";
   ```
5. 关闭文件
   ```
   ofs.close();
   ```

|打开方式|解释|
|---|---|
|ios::in|为读文件而打开文件
|ios::out|为写文件而打开文件
|ios::ate|初始位置 文件末尾
|ios::app|追加方式写文件
|ios::trunc|如果文件存在先删除，再创建
|ios::binary|二进制方式

注意：文件打开方式可以配合使用，利用 | 操作符

例如：用二进制写文件 
```
ios::binary | ios::out
```
# 5.2读文件
1. 头文件
```
#include<fstream>
```
2. 创建对象
```
    ifstream ifs;
```
3. 打开文件并判断文件是否存在
```
	ifs.open("test.txt", ios::in);
	if (!ifs.is_open())
	{
		cout << "Failed.\n";
		return;
	}
```
4. 读数据
```	
	char buf[1024] = { 0 };
	while (ifs >> buf)
	{
		cout << buf << endl;
	}
```
```
char buf[1024]={0};
while(ifs.getline(buf,sizeof(buf)))
{
    cout<<buf<<endl;
}
```
5. 关闭文件
```
	ifs.close();
```
# 5.3二进制写文件
```
class Person
{
public:
	char name[64];
	int len;
};
void test1()
{
	ofstream ofs("person.text", ios::out | ios::binary);          //也可以用这种方式构造
	//ofs.open("person.text", ios::out | ios::binary);
	Person p={"lucy",18};
	ofs.write((const char*)&p, sizeof(Person));
	ofs.close();
}
```
# 5.4二进制读文件
```
ifstream ifs;
	ifs.open("person.text", ios::in | ios::binary);
	if (!ifs.is_open())
	{
		cout << "Failed\n";
	}
	Person p;
	ifs.read((char*)&p, sizeof(Person));
	cout << "Name:" << p.m_name << "  Age:" << p.m_age << endl;
	ifs.close();
```