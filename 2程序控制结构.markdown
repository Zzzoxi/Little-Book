## 1.算术运算
1. 取模 % 计算两个整数的余数（注意不能%0 或者 %2.5小数）
2. 自增自减 i++; ++i; i--; --i; ++(++i);
3. 强制类型转换 2.0/4
## 2.逻辑表达式
1. ==是等于，=是赋值
2. 优先级从高到低：！-> 算术运算符 -> 关系运算符 -> && ->  ||
3. && 和 || 都是从左开始，！是从右开始
   
   （如果左边已经满足条件了右边可以不计算直接退出）
4. max=a > b ? a : b;
5. (a=b)=10;首先执行 a=b,把b的值写入a，表达式的值确实于a，然后在执行a=10.上述对a做了两次写操作，对b做了一次读操作。
6. 逗号表达式
   1. 每个表达式按顺序执行
   2. 逗号表达式也表达一个值，这个值是最后一个表达式的值（逗号运算级别最低） 
   3. |   表达式 | 结果   |
      |-----| ----|
      | x=a=3,2*6 ;     | x=3 |
      |x=(a=3, 2*6) | x=12|

## 3. if 语句
1. 计算三角形面积
   
     area = $\sqrt{s * (s-a) * (s-b) * (s-c)}$

      s=(a+b+c)/2.0
2. 注意作用域 { }
3. 注意特殊情况 特判 a<0; a=0;
4. 注意判断  if ( ! answer )中的 !
5. *浮点数判断范围*
   
   不会直接用==，而是用
   ```
   #include<cmath>

   fabs(a)<=1e-8 ； 
   ```
6. == 与 =
   ```
   if(c=a-b)  //问a-b是否等于0
   if(c==a-b)   // 二者是否相等
   ```
## 4. switch 语句
```
switch(表达式)    //表达式只能是整型、字符型、枚举型
{
    case 常量表达式1：语句1；break;
    case 常量表达式2：语句2；break;
    ……
    defalut:语句
}

    //如果语句一有很多，并且需要设置变量，需要加{}
    // 如case 1 :{int a=10; ……}
     // 有没有加break；加了则退出，没有则会继续往下走。
    /*
     switch(m){
     case 1:cout<<"one ";
     case 2:cout<<"two";
     case 3:cout<<"three";
     } 
     */
    //   如果 m==1 那么输出结果为 one two three

```
## 5. while循环
根据条件执行操作而不需要关心循环次数

循环的初始化
```
先判断条件再看是否要执行
while（条件）
{
      int a=0;    //加法器
      循环体
      int b=1;     //乘法器初始 
}
```
## do while 语句
```
先执行一次再判断是否满足条件
do
{
   循环体
}while（条件）；           //  ;不要漏了
```
## for 循环
for(初始化表达式； 循环条件表达式； 最后一句执行语句 ) { }